require "uri"
require "net/http"

class RpsClient
  class << self
    def get(url)
      uri = URI(url)
      response = Net::HTTP.get_response(uri)
      handle_response(response)
    end

    def handle_response(response)
      status_code = response.code.to_i
      log_status_message(status_code)
      JSON.parse(response.body, symbolize_names: true).merge(statusCode: status_code)
    end

    def log_status_message(code)
      message = case code
                when 100..103
                  "Informational HTTP status code received: #{code}"
                when 200..226
                  "Success, HTTP status code: #{code}"
                when 300..308
                  "Redirection, HTTP status code: #{code}"
                when 400..451
                  "Client error, HTTP status code: #{code}"
                when 500..511
                  "Rock Paper Scissors server error, HTTP status code: #{code}"
                else
                  "Unknown HTTP status code received: #{code}"
                end

      Rails.logger.warn(message)
    end

    def fetch_opponent_choice
      api_response = get(url)

      if api_response[:statusCode] == 200
        api_response.merge(message: "Generated by api")
      else
        generate_opponent_choice_locally
      end
    end

    def url
      "https://5eddt4q9dk.execute-api.us-east-1.amazonaws.com/rps-stage/throw"
    end

    def generate_opponent_choice_locally
      Rails.logger.warn("Generating an opponent throw.")
      choice = %w[rock paper scissors].sample

      {
        statusCode: 200,
        message: "Generated locally",
        body: choice
      }
    end
  end
end
